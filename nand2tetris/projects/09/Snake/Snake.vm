function Snake.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push argument 0
call Array.new 1
pop this 0
push argument 1
pop this 4
push argument 0
pop this 2
push pointer 0
return
function Snake.setup 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push argument 1
call Grid.getBorderX1 1
push argument 1
call Grid.getBorderX2 1
add
push constant 2
call Math.divide 2
push argument 1
call Grid.getBorderY1 1
push argument 1
call Grid.getBorderY2 1
add
push constant 2
call Math.divide 2
push local 1
add
push constant 1
call Block.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 5
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Snake.draw 1
pop temp 0
push constant 0
return
function Snake.draw 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop this 5
push this 5
call Block.getPosX 1
push this 5
call Block.getPosY 1
push this 5
call Block.getPosX 1
push constant 5
add
push this 5
call Block.getPosY 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.erase 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop this 5
push this 5
call Block.getPosX 1
push this 5
call Block.getPosY 1
push this 5
call Block.getPosX 1
push constant 5
add
push this 5
call Block.getPosY 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.checkIfAte 4
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
push this 0
add
pop pointer 1
push that 0
pop this 5
label WHILE_EXP0
push local 0
push constant 6
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 6
lt
not
if-goto WHILE_END1
push this 5
call Block.getPosX 1
push local 0
add
push argument 1
call Fruit.getPosX 1
push local 1
add
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push constant 6
lt
not
if-goto WHILE_END2
push constant 0
pop local 3
label WHILE_EXP3
push local 3
push constant 6
lt
not
if-goto WHILE_END3
push this 5
call Block.getPosY 1
push local 2
add
push argument 1
call Fruit.getPosY 1
push local 3
add
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Snake.grow 1
pop temp 0
push argument 1
call Fruit.rePos 1
pop temp 0
push constant 0
not
return
label IF_FALSE1
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP3
label WHILE_END3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.move 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push pointer 0
call Snake.erase 1
pop temp 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop this 5
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
push this 5
call Block.getDirection 1
call Block.setPreDirection 2
pop temp 0
push this 5
push this 4
call Block.setDirection 2
pop temp 0
push this 5
call Block.getDirection 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 5
call Block.getPreDirection 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 5
push constant 2
call Block.setDirection 2
pop temp 0
label IF_FALSE2
label IF_FALSE1
push this 5
call Block.getDirection 1
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 5
call Block.getPreDirection 1
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 5
push constant 1
call Block.setDirection 2
pop temp 0
label IF_FALSE4
label IF_FALSE3
push this 5
call Block.getDirection 1
push constant 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 5
call Block.getPreDirection 1
push constant 4
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 5
push constant 4
call Block.setDirection 2
pop temp 0
label IF_FALSE6
label IF_FALSE5
push this 5
call Block.getDirection 1
push constant 4
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 5
call Block.getPreDirection 1
push constant 3
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 5
push constant 3
call Block.setDirection 2
pop temp 0
label IF_FALSE8
label IF_FALSE7
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop this 6
push this 5
push this 5
call Block.getDirection 1
call Block.setPreDirection 2
pop temp 0
push this 5
push this 6
call Block.getPreDirection 1
call Block.setDirection 2
pop temp 0
label IF_END0
push this 5
call Block.getDirection 1
push constant 1
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 5
call Block.getPosY 1
push constant 5
sub
push argument 1
call Grid.getBorderY1 1
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push this 5
push argument 1
call Grid.getBorderY2 1
push constant 5
sub
call Block.setPosY 2
pop temp 0
label IF_FALSE10
push this 5
push this 5
call Block.getPosY 1
push constant 5
sub
call Block.setPosY 2
pop temp 0
label IF_FALSE9
push this 5
call Block.getDirection 1
push constant 2
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push this 5
call Block.getPosY 1
push constant 5
add
push argument 1
call Grid.getBorderY2 1
push constant 5
sub
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push this 5
push argument 1
call Grid.getBorderY1 1
call Block.setPosY 2
pop temp 0
label IF_FALSE12
push this 5
push this 5
call Block.getPosY 1
push constant 5
add
call Block.setPosY 2
pop temp 0
label IF_FALSE11
push this 5
call Block.getDirection 1
push constant 3
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push this 5
call Block.getPosX 1
push constant 5
sub
push argument 1
call Grid.getBorderX1 1
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push this 5
push argument 1
call Grid.getBorderX2 1
push constant 5
sub
call Block.setPosX 2
pop temp 0
label IF_FALSE14
push this 5
push this 5
call Block.getPosX 1
push constant 5
sub
call Block.setPosX 2
pop temp 0
label IF_FALSE13
push this 5
call Block.getDirection 1
push constant 4
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push this 5
call Block.getPosX 1
push constant 5
add
push argument 1
call Grid.getBorderX2 1
push constant 5
sub
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push this 5
push argument 1
call Grid.getBorderX1 1
call Block.setPosX 2
pop temp 0
label IF_FALSE16
push this 5
push this 5
call Block.getPosX 1
push constant 5
add
call Block.setPosX 2
pop temp 0
label IF_FALSE15
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Snake.draw 1
pop temp 0
push constant 0
return
function Snake.grow 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 2
push constant 1
add
pop this 2
push this 2
call Array.new 1
pop this 1
label WHILE_EXP0
push local 0
push this 2
push constant 1
sub
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
push local 0
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 2
push constant 2
sub
push this 0
add
pop pointer 1
push that 0
pop this 6
push this 6
call Block.getPosX 1
pop local 1
push this 6
call Block.getPosY 1
pop local 2
push this 6
call Block.getDirection 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
sub
push this 1
add
push local 1
push local 2
push constant 5
add
push constant 1
call Block.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push this 6
call Block.getDirection 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 1
sub
push this 1
add
push local 1
push local 2
push constant 5
sub
push constant 2
call Block.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push this 6
call Block.getDirection 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push constant 1
sub
push this 1
add
push local 1
push constant 5
add
push local 2
push constant 3
call Block.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push this 6
call Block.getDirection 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
push constant 1
sub
push this 1
add
push local 1
push constant 5
sub
push local 2
push constant 4
call Block.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push this 0
call Array.dispose 1
pop temp 0
push this 2
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 2
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
push local 0
push this 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push this 1
call Array.dispose 1
pop temp 0
push constant 0
return
function Snake.isAlive 5
push argument 0
pop pointer 0
push constant 1
pop local 0
push constant 0
push this 0
add
pop pointer 1
push that 0
pop this 5
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop this 6
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 5
lt
not
if-goto WHILE_END1
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push constant 5
lt
not
if-goto WHILE_END2
push this 5
call Block.getPosX 1
push local 1
add
push this 6
call Block.getPosX 1
push local 2
add
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 3
label WHILE_EXP3
push local 3
push constant 5
lt
not
if-goto WHILE_END3
push constant 0
pop local 4
label WHILE_EXP4
push local 4
push constant 5
lt
not
if-goto WHILE_END4
push this 5
call Block.getPosY 1
push local 3
add
push this 6
call Block.getPosY 1
push local 4
add
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP4
label WHILE_END4
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP3
label WHILE_END3
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Snake.setDirection 0
push argument 0
pop pointer 0
push argument 1
pop this 4
push constant 0
return
function Snake.setPreDirection 0
push argument 0
pop pointer 0
push argument 1
pop this 4
push constant 0
return
function Snake.getDirection 0
push argument 0
pop pointer 0
push this 4
return
function Snake.getPreDirection 0
push argument 0
pop pointer 0
push this 3
return
